#lang racket
(define (isLeapYr? year)
  (cond
    ((= (modulo year 400) 0) #t)
    ((= (modulo year 100) 0) #f)
    ((= (modulo year 4) 0) #t)
    ((= (modulo year 1) 0) #f)
  )
)
(define (daysInMonth month year)
  (if (isLeapYr? year)
      (case month
          [(1 3 5 7 8 10 12) "31"]
          [(4 6 9 11) "30"]
          [(2) "29"]
          [else "Not a valid month"]
       )
      (case month
          [(1 3 5 7 8 10 12) "31"]
          [(4 6 9 11) "30"]
          [(2) "28"]
          [else "Not a valid month"]
       )
   )
)
(define (militaryTime time)
  (modulo time 12)
)